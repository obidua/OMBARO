// Complete column definitions for production database tables (60 tables)

export interface ColumnInfo {
  name: string;
  type: string;
  constraints: string;
  description: string;
}

export const tableColumns: Record<string, ColumnInfo[]> = {
  // ============================================================================
  // SYSTEM & CONFIGURATION (6 tables)
  // ============================================================================

  system_settings: [
    { name: 'id', type: 'uuid', constraints: 'PRIMARY KEY', description: 'Setting identifier' },
    { name: 'key', type: 'text', constraints: 'UNIQUE, NOT NULL', description: 'Setting key' },
    { name: 'value', type: 'jsonb', constraints: 'NOT NULL', description: 'Setting value' },
    { name: 'description', type: 'text', constraints: '', description: 'Setting description' },
    { name: 'category', type: 'text', constraints: 'NOT NULL', description: 'Setting category' },
    { name: 'is_public', type: 'boolean', constraints: 'DEFAULT false', description: 'Public visibility flag' },
    { name: 'updated_by', type: 'uuid', constraints: 'REFERENCES auth.users(id)', description: 'Last updated by user' },
    { name: 'created_at', type: 'timestamptz', constraints: 'DEFAULT now()', description: 'Creation timestamp' },
    { name: 'updated_at', type: 'timestamptz', constraints: 'DEFAULT now()', description: 'Update timestamp' },
  ],

  feature_flags: [
    { name: 'id', type: 'uuid', constraints: 'PRIMARY KEY', description: 'Feature flag identifier' },
    { name: 'name', type: 'text', constraints: 'UNIQUE, NOT NULL', description: 'Feature flag name' },
    { name: 'description', type: 'text', constraints: '', description: 'Feature description' },
    { name: 'is_enabled', type: 'boolean', constraints: 'DEFAULT false', description: 'Enabled status' },
    { name: 'rollout_percentage', type: 'integer', constraints: 'CHECK (0-100)', description: 'Percentage rollout (0-100)' },
    { name: 'target_roles', type: 'text[]', constraints: '', description: 'Target role array' },
    { name: 'created_at', type: 'timestamptz', constraints: 'DEFAULT now()', description: 'Creation timestamp' },
    { name: 'updated_at', type: 'timestamptz', constraints: 'DEFAULT now()', description: 'Update timestamp' },
  ],

  audit_logs: [
    { name: 'id', type: 'uuid', constraints: 'PRIMARY KEY', description: 'Log identifier' },
    { name: 'user_id', type: 'uuid', constraints: 'REFERENCES auth.users(id)', description: 'User who performed action' },
    { name: 'action', type: 'text', constraints: 'NOT NULL', description: 'Action performed' },
    { name: 'resource_type', type: 'text', constraints: 'NOT NULL', description: 'Resource type affected' },
    { name: 'resource_id', type: 'uuid', constraints: '', description: 'Resource identifier' },
    { name: 'old_values', type: 'jsonb', constraints: '', description: 'Previous values' },
    { name: 'new_values', type: 'jsonb', constraints: '', description: 'New values' },
    { name: 'ip_address', type: 'inet', constraints: '', description: 'IP address' },
    { name: 'user_agent', type: 'text', constraints: '', description: 'Browser user agent' },
    { name: 'created_at', type: 'timestamptz', constraints: 'DEFAULT now()', description: 'Log timestamp' },
  ],

  error_logs: [
    { name: 'id', type: 'uuid', constraints: 'PRIMARY KEY', description: 'Error log identifier' },
    { name: 'error_type', type: 'text', constraints: 'NOT NULL', description: 'Type of error' },
    { name: 'error_message', type: 'text', constraints: 'NOT NULL', description: 'Error message' },
    { name: 'stack_trace', type: 'text', constraints: '', description: 'Stack trace' },
    { name: 'user_id', type: 'uuid', constraints: 'REFERENCES auth.users(id)', description: 'User who encountered error' },
    { name: 'request_data', type: 'jsonb', constraints: '', description: 'Request data at time of error' },
    { name: 'severity', type: 'text', constraints: 'CHECK (info, warning, error, critical)', description: 'Error severity level' },
    { name: 'resolved', type: 'boolean', constraints: 'DEFAULT false', description: 'Resolution status' },
    { name: 'created_at', type: 'timestamptz', constraints: 'DEFAULT now()', description: 'Error timestamp' },
  ],

  user_activity_log: [
    { name: 'id', type: 'uuid', constraints: 'PRIMARY KEY', description: 'Activity log identifier' },
    { name: 'user_id', type: 'uuid', constraints: 'REFERENCES auth.users(id)', description: 'User reference' },
    { name: 'action', type: 'text', constraints: 'NOT NULL', description: 'Action performed' },
    { name: 'page_path', type: 'text', constraints: '', description: 'Page path visited' },
    { name: 'metadata', type: 'jsonb', constraints: 'DEFAULT {}', description: 'Additional metadata' },
    { name: 'session_id', type: 'text', constraints: '', description: 'Session identifier' },
    { name: 'created_at', type: 'timestamptz', constraints: 'DEFAULT now()', description: 'Activity timestamp' },
  ],

  notifications: [
    { name: 'id', type: 'uuid', constraints: 'PRIMARY KEY', description: 'Notification identifier' },
    { name: 'user_id', type: 'uuid', constraints: 'NOT NULL, REFERENCES auth.users(id)', description: 'User reference' },
    { name: 'type', type: 'text', constraints: 'NOT NULL, CHECK (enum)', description: 'Notification type' },
    { name: 'title', type: 'text', constraints: 'NOT NULL', description: 'Notification title' },
    { name: 'message', type: 'text', constraints: 'NOT NULL', description: 'Notification message' },
    { name: 'data', type: 'jsonb', constraints: 'DEFAULT {}', description: 'Additional data' },
    { name: 'channels', type: 'text[]', constraints: "DEFAULT ['push', 'in_app']", description: 'Delivery channels' },
    { name: 'is_read', type: 'boolean', constraints: 'DEFAULT false', description: 'Read status' },
    { name: 'read_at', type: 'timestamptz', constraints: '', description: 'Read timestamp' },
    { name: 'created_at', type: 'timestamptz', constraints: 'DEFAULT now()', description: 'Creation timestamp' },
  ],

  // ============================================================================
  // LOCATION & GEOGRAPHY (5 tables)
  // ============================================================================

  countries: [
    { name: 'id', type: 'uuid', constraints: 'PRIMARY KEY', description: 'Country identifier' },
    { name: 'name', type: 'text', constraints: 'UNIQUE, NOT NULL', description: 'Country name' },
    { name: 'code', type: 'text', constraints: 'UNIQUE, NOT NULL', description: 'Country code (e.g., IN)' },
    { name: 'phone_code', type: 'text', constraints: '', description: 'Phone code (e.g., +91)' },
    { name: 'currency', type: 'text', constraints: 'DEFAULT INR', description: 'Currency code' },
    { name: 'is_active', type: 'boolean', constraints: 'DEFAULT true', description: 'Active status' },
    { name: 'created_at', type: 'timestamptz', constraints: 'DEFAULT now()', description: 'Creation timestamp' },
  ],

  states: [
    { name: 'id', type: 'uuid', constraints: 'PRIMARY KEY', description: 'State identifier' },
    { name: 'country_id', type: 'uuid', constraints: 'NOT NULL, REFERENCES countries(id)', description: 'Country reference' },
    { name: 'name', type: 'text', constraints: 'NOT NULL', description: 'State name' },
    { name: 'code', type: 'text', constraints: 'NOT NULL', description: 'State code' },
    { name: 'is_active', type: 'boolean', constraints: 'DEFAULT true', description: 'Active status' },
    { name: 'created_at', type: 'timestamptz', constraints: 'DEFAULT now()', description: 'Creation timestamp' },
  ],

  cities: [
    { name: 'id', type: 'uuid', constraints: 'PRIMARY KEY', description: 'City identifier' },
    { name: 'state_id', type: 'uuid', constraints: 'NOT NULL, REFERENCES states(id)', description: 'State reference' },
    { name: 'name', type: 'text', constraints: 'NOT NULL', description: 'City name' },
    { name: 'is_active', type: 'boolean', constraints: 'DEFAULT true', description: 'Active status' },
    { name: 'created_at', type: 'timestamptz', constraints: 'DEFAULT now()', description: 'Creation timestamp' },
  ],

  zones: [
    { name: 'id', type: 'uuid', constraints: 'PRIMARY KEY', description: 'Zone identifier' },
    { name: 'name', type: 'text', constraints: 'NOT NULL', description: 'Zone name' },
    { name: 'city_id', type: 'uuid', constraints: 'REFERENCES cities(id)', description: 'City reference' },
    { name: 'coordinates', type: 'geography(POLYGON)', constraints: '', description: 'Geographic polygon coordinates' },
    { name: 'is_serviceable', type: 'boolean', constraints: 'DEFAULT true', description: 'Serviceability status' },
    { name: 'service_charge', type: 'numeric(10,2)', constraints: 'DEFAULT 0', description: 'Service charge amount' },
    { name: 'created_at', type: 'timestamptz', constraints: 'DEFAULT now()', description: 'Creation timestamp' },
  ],

  pincode_master: [
    { name: 'id', type: 'uuid', constraints: 'PRIMARY KEY', description: 'Pincode identifier' },
    { name: 'pincode', type: 'text', constraints: 'UNIQUE, NOT NULL', description: 'Pincode/ZIP code' },
    { name: 'city_id', type: 'uuid', constraints: 'REFERENCES cities(id)', description: 'City reference' },
    { name: 'zone_id', type: 'uuid', constraints: 'REFERENCES zones(id)', description: 'Zone reference' },
    { name: 'is_serviceable', type: 'boolean', constraints: 'DEFAULT true', description: 'Serviceability status' },
    { name: 'delivery_charge', type: 'numeric(10,2)', constraints: 'DEFAULT 0', description: 'Delivery charge' },
    { name: 'created_at', type: 'timestamptz', constraints: 'DEFAULT now()', description: 'Creation timestamp' },
  ],

  // ============================================================================
  // DEPARTMENTS & ROLES (5 tables)
  // ============================================================================

  departments: [
    { name: 'id', type: 'uuid', constraints: 'PRIMARY KEY', description: 'Department identifier' },
    { name: 'name', type: 'text', constraints: 'UNIQUE, NOT NULL', description: 'Department name' },
    { name: 'code', type: 'text', constraints: 'UNIQUE, NOT NULL', description: 'Department code' },
    { name: 'description', type: 'text', constraints: '', description: 'Department description' },
    { name: 'parent_department_id', type: 'uuid', constraints: 'REFERENCES departments(id)', description: 'Parent department for hierarchy' },
    { name: 'head_user_id', type: 'uuid', constraints: 'REFERENCES auth.users(id)', description: 'Department head user' },
    { name: 'status', type: 'text', constraints: 'DEFAULT active, CHECK (active, inactive)', description: 'Department status' },
    { name: 'created_at', type: 'timestamptz', constraints: 'DEFAULT now()', description: 'Creation timestamp' },
    { name: 'updated_at', type: 'timestamptz', constraints: 'DEFAULT now()', description: 'Update timestamp' },
  ],

  roles: [
    { name: 'id', type: 'uuid', constraints: 'PRIMARY KEY', description: 'Role identifier' },
    { name: 'name', type: 'text', constraints: 'UNIQUE, NOT NULL', description: 'Role name' },
    { name: 'code', type: 'text', constraints: 'UNIQUE, NOT NULL', description: 'Role code' },
    { name: 'description', type: 'text', constraints: '', description: 'Role description' },
    { name: 'department_id', type: 'uuid', constraints: 'REFERENCES departments(id)', description: 'Department reference' },
    { name: 'level', type: 'integer', constraints: 'DEFAULT 1', description: 'Hierarchy level' },
    { name: 'permissions', type: 'jsonb', constraints: "DEFAULT '[]'", description: 'Permission array' },
    { name: 'is_system_role', type: 'boolean', constraints: 'DEFAULT false', description: 'System role flag' },
    { name: 'status', type: 'text', constraints: 'DEFAULT active, CHECK (active, inactive)', description: 'Role status' },
    { name: 'created_at', type: 'timestamptz', constraints: 'DEFAULT now()', description: 'Creation timestamp' },
    { name: 'updated_at', type: 'timestamptz', constraints: 'DEFAULT now()', description: 'Update timestamp' },
  ],

  permissions: [
    { name: 'id', type: 'uuid', constraints: 'PRIMARY KEY', description: 'Permission identifier' },
    { name: 'name', type: 'text', constraints: 'UNIQUE, NOT NULL', description: 'Permission name' },
    { name: 'code', type: 'text', constraints: 'UNIQUE, NOT NULL', description: 'Permission code' },
    { name: 'description', type: 'text', constraints: '', description: 'Permission description' },
    { name: 'resource', type: 'text', constraints: 'NOT NULL', description: 'Resource type' },
    { name: 'action', type: 'text', constraints: 'CHECK (create, read, update, delete, execute, approve)', description: 'Action type' },
    { name: 'created_at', type: 'timestamptz', constraints: 'DEFAULT now()', description: 'Creation timestamp' },
  ],

  role_permissions: [
    { name: 'id', type: 'uuid', constraints: 'PRIMARY KEY', description: 'Role-permission mapping ID' },
    { name: 'role_id', type: 'uuid', constraints: 'NOT NULL, REFERENCES roles(id)', description: 'Role reference' },
    { name: 'permission_id', type: 'uuid', constraints: 'NOT NULL, REFERENCES permissions(id)', description: 'Permission reference' },
    { name: 'granted_at', type: 'timestamptz', constraints: 'DEFAULT now()', description: 'Grant timestamp' },
  ],

  user_roles: [
    { name: 'id', type: 'uuid', constraints: 'PRIMARY KEY', description: 'User-role assignment ID' },
    { name: 'user_id', type: 'uuid', constraints: 'NOT NULL, REFERENCES auth.users(id)', description: 'User reference' },
    { name: 'role_id', type: 'uuid', constraints: 'NOT NULL, REFERENCES roles(id)', description: 'Role reference' },
    { name: 'department_id', type: 'uuid', constraints: 'REFERENCES departments(id)', description: 'Department reference' },
    { name: 'assigned_by', type: 'uuid', constraints: 'REFERENCES auth.users(id)', description: 'Who assigned the role' },
    { name: 'assigned_at', type: 'timestamptz', constraints: 'DEFAULT now()', description: 'Assignment timestamp' },
    { name: 'valid_from', type: 'date', constraints: 'DEFAULT CURRENT_DATE', description: 'Validity start date' },
    { name: 'valid_until', type: 'date', constraints: '', description: 'Validity end date' },
    { name: 'is_primary', type: 'boolean', constraints: 'DEFAULT false', description: 'Primary role flag' },
    { name: 'status', type: 'text', constraints: 'DEFAULT active, CHECK (active, inactive, expired)', description: 'Assignment status' },
  ],

  // ============================================================================
  // USERS & AUTHENTICATION (8 tables)
  // ============================================================================

  user_profiles: [
    { name: 'id', type: 'uuid', constraints: 'PRIMARY KEY, REFERENCES auth.users(id)', description: 'User identifier' },
    { name: 'name', type: 'text', constraints: 'NOT NULL', description: 'Full name' },
    { name: 'mobile', type: 'text', constraints: 'UNIQUE, NOT NULL', description: 'Mobile number' },
    { name: 'email', type: 'text', constraints: '', description: 'Email address' },
    { name: 'gender', type: 'text', constraints: 'CHECK (male, female, other)', description: 'Gender' },
    { name: 'date_of_birth', type: 'date', constraints: '', description: 'Date of birth' },
    { name: 'profile_image', type: 'text', constraints: '', description: 'Profile picture URL' },
    { name: 'role', type: 'text', constraints: 'NOT NULL, CHECK (enum)', description: 'User role' },
    { name: 'employee_id', type: 'text', constraints: 'UNIQUE', description: 'Employee ID for staff' },
    { name: 'department_id', type: 'uuid', constraints: 'REFERENCES departments(id)', description: 'Department reference' },
    { name: 'designation', type: 'text', constraints: '', description: 'Job designation' },
    { name: 'joining_date', type: 'date', constraints: '', description: 'Date of joining' },
    { name: 'status', type: 'text', constraints: 'DEFAULT active, CHECK (enum)', description: 'Account status' },
    { name: 'address', type: 'jsonb', constraints: '', description: 'Address information' },
    { name: 'emergency_contact', type: 'jsonb', constraints: '', description: 'Emergency contact details' },
    { name: 'preferences', type: 'jsonb', constraints: 'DEFAULT {}', description: 'User preferences' },
    { name: 'created_at', type: 'timestamptz', constraints: 'DEFAULT now()', description: 'Creation timestamp' },
    { name: 'updated_at', type: 'timestamptz', constraints: 'DEFAULT now()', description: 'Update timestamp' },
  ],

  user_sessions: [
    { name: 'id', type: 'uuid', constraints: 'PRIMARY KEY', description: 'Session identifier' },
    { name: 'user_id', type: 'uuid', constraints: 'NOT NULL, REFERENCES auth.users(id)', description: 'User reference' },
    { name: 'session_token', type: 'text', constraints: 'UNIQUE, NOT NULL', description: 'Session token' },
    { name: 'device_info', type: 'jsonb', constraints: '', description: 'Device information' },
    { name: 'ip_address', type: 'inet', constraints: '', description: 'IP address' },
    { name: 'user_agent', type: 'text', constraints: '', description: 'Browser user agent' },
    { name: 'location_info', type: 'jsonb', constraints: '', description: 'Geographic location' },
    { name: 'started_at', type: 'timestamptz', constraints: 'DEFAULT now()', description: 'Session start time' },
    { name: 'last_activity_at', type: 'timestamptz', constraints: 'DEFAULT now()', description: 'Last activity time' },
    { name: 'expires_at', type: 'timestamptz', constraints: 'NOT NULL', description: 'Expiry time' },
    { name: 'status', type: 'text', constraints: 'DEFAULT active, CHECK (active, expired, terminated)', description: 'Session status' },
  ],

  user_documents: [
    { name: 'id', type: 'uuid', constraints: 'PRIMARY KEY', description: 'Document identifier' },
    { name: 'user_id', type: 'uuid', constraints: 'NOT NULL, REFERENCES auth.users(id)', description: 'User reference' },
    { name: 'document_type', type: 'text', constraints: 'NOT NULL, CHECK (enum)', description: 'Document type' },
    { name: 'document_number', type: 'text', constraints: '', description: 'Document number' },
    { name: 'document_name', type: 'text', constraints: 'NOT NULL', description: 'Document name' },
    { name: 'file_url', type: 'text', constraints: 'NOT NULL', description: 'File storage URL' },
    { name: 'file_type', type: 'text', constraints: '', description: 'File MIME type' },
    { name: 'file_size', type: 'integer', constraints: '', description: 'File size in bytes' },
    { name: 'verified', type: 'boolean', constraints: 'DEFAULT false', description: 'Verification status' },
    { name: 'verified_by', type: 'uuid', constraints: 'REFERENCES auth.users(id)', description: 'Verified by user' },
    { name: 'verified_at', type: 'timestamptz', constraints: '', description: 'Verification timestamp' },
    { name: 'expiry_date', type: 'date', constraints: '', description: 'Document expiry' },
    { name: 'created_at', type: 'timestamptz', constraints: 'DEFAULT now()', description: 'Upload timestamp' },
    { name: 'updated_at', type: 'timestamptz', constraints: 'DEFAULT now()', description: 'Update timestamp' },
  ],

  user_preferences: [
    { name: 'id', type: 'uuid', constraints: 'PRIMARY KEY', description: 'Preference identifier' },
    { name: 'user_id', type: 'uuid', constraints: 'NOT NULL, UNIQUE, REFERENCES auth.users(id)', description: 'User reference' },
    { name: 'notification_email', type: 'boolean', constraints: 'DEFAULT true', description: 'Email notifications' },
    { name: 'notification_sms', type: 'boolean', constraints: 'DEFAULT true', description: 'SMS notifications' },
    { name: 'notification_push', type: 'boolean', constraints: 'DEFAULT true', description: 'Push notifications' },
    { name: 'notification_whatsapp', type: 'boolean', constraints: 'DEFAULT false', description: 'WhatsApp notifications' },
    { name: 'language', type: 'text', constraints: 'DEFAULT en', description: 'Preferred language' },
    { name: 'timezone', type: 'text', constraints: 'DEFAULT Asia/Kolkata', description: 'Timezone' },
    { name: 'currency', type: 'text', constraints: 'DEFAULT INR', description: 'Currency preference' },
    { name: 'theme', type: 'text', constraints: 'DEFAULT light, CHECK (light, dark, auto)', description: 'Theme preference' },
    { name: 'preferences', type: 'jsonb', constraints: 'DEFAULT {}', description: 'Additional preferences' },
    { name: 'created_at', type: 'timestamptz', constraints: 'DEFAULT now()', description: 'Creation timestamp' },
    { name: 'updated_at', type: 'timestamptz', constraints: 'DEFAULT now()', description: 'Update timestamp' },
  ],

  user_kyc_verification: [
    { name: 'id', type: 'uuid', constraints: 'PRIMARY KEY', description: 'KYC verification identifier' },
    { name: 'user_id', type: 'uuid', constraints: 'NOT NULL, REFERENCES auth.users(id)', description: 'User reference' },
    { name: 'verification_type', type: 'text', constraints: 'NOT NULL, CHECK (aadhaar, pan, bank, email, mobile, gst)', description: 'Verification type' },
    { name: 'verification_status', type: 'text', constraints: 'DEFAULT pending, CHECK (pending, verified, failed, expired)', description: 'Verification status' },
    { name: 'verification_data', type: 'jsonb', constraints: '', description: 'Verification details' },
    { name: 'verified_at', type: 'timestamptz', constraints: '', description: 'Verification timestamp' },
    { name: 'expires_at', type: 'timestamptz', constraints: '', description: 'Expiry timestamp' },
    { name: 'created_at', type: 'timestamptz', constraints: 'DEFAULT now()', description: 'Creation timestamp' },
  ],

  user_bank_details: [
    { name: 'id', type: 'uuid', constraints: 'PRIMARY KEY', description: 'Bank details identifier' },
    { name: 'user_id', type: 'uuid', constraints: 'NOT NULL, REFERENCES auth.users(id)', description: 'User reference' },
    { name: 'account_holder_name', type: 'text', constraints: 'NOT NULL', description: 'Account holder name' },
    { name: 'account_number', type: 'text', constraints: 'NOT NULL', description: 'Bank account number' },
    { name: 'ifsc_code', type: 'text', constraints: 'NOT NULL', description: 'IFSC code' },
    { name: 'bank_name', type: 'text', constraints: 'NOT NULL', description: 'Bank name' },
    { name: 'branch_name', type: 'text', constraints: '', description: 'Branch name' },
    { name: 'account_type', type: 'text', constraints: 'CHECK (savings, current)', description: 'Account type' },
    { name: 'is_primary', type: 'boolean', constraints: 'DEFAULT false', description: 'Primary account flag' },
    { name: 'is_verified', type: 'boolean', constraints: 'DEFAULT false', description: 'Verification status' },
    { name: 'created_at', type: 'timestamptz', constraints: 'DEFAULT now()', description: 'Creation timestamp' },
    { name: 'updated_at', type: 'timestamptz', constraints: 'DEFAULT now()', description: 'Update timestamp' },
  ],

  emergency_contacts: [
    { name: 'id', type: 'uuid', constraints: 'PRIMARY KEY', description: 'Emergency contact identifier' },
    { name: 'user_id', type: 'uuid', constraints: 'NOT NULL, REFERENCES auth.users(id)', description: 'User reference' },
    { name: 'name', type: 'text', constraints: 'NOT NULL', description: 'Contact name' },
    { name: 'relationship', type: 'text', constraints: 'NOT NULL', description: 'Relationship to user' },
    { name: 'mobile', type: 'text', constraints: 'NOT NULL', description: 'Contact mobile' },
    { name: 'email', type: 'text', constraints: '', description: 'Contact email' },
    { name: 'address', type: 'text', constraints: '', description: 'Contact address' },
    { name: 'is_primary', type: 'boolean', constraints: 'DEFAULT false', description: 'Primary contact flag' },
    { name: 'created_at', type: 'timestamptz', constraints: 'DEFAULT now()', description: 'Creation timestamp' },
  ],

  employees: [
    { name: 'id', type: 'uuid', constraints: 'PRIMARY KEY, REFERENCES auth.users(id)', description: 'Employee identifier' },
    { name: 'employee_code', type: 'text', constraints: 'UNIQUE, NOT NULL', description: 'Employee code' },
    { name: 'joining_date', type: 'date', constraints: 'NOT NULL', description: 'Date of joining' },
    { name: 'probation_end_date', type: 'date', constraints: '', description: 'Probation end date' },
    { name: 'confirmation_date', type: 'date', constraints: '', description: 'Confirmation date' },
    { name: 'employment_type', type: 'text', constraints: 'CHECK (full_time, part_time, contract, intern)', description: 'Employment type' },
    { name: 'reporting_manager_id', type: 'uuid', constraints: 'REFERENCES employees(id)', description: 'Reporting manager' },
    { name: 'work_location', type: 'text', constraints: '', description: 'Work location' },
    { name: 'basic_salary', type: 'numeric(12,2)', constraints: '', description: 'Basic salary' },
    { name: 'status', type: 'text', constraints: 'DEFAULT active, CHECK (active, on_leave, inactive, terminated)', description: 'Employment status' },
    { name: 'exit_date', type: 'date', constraints: '', description: 'Exit date' },
    { name: 'exit_reason', type: 'text', constraints: '', description: 'Exit reason' },
    { name: 'created_at', type: 'timestamptz', constraints: 'DEFAULT now()', description: 'Creation timestamp' },
    { name: 'updated_at', type: 'timestamptz', constraints: 'DEFAULT now()', description: 'Update timestamp' },
  ],

  // ============================================================================
  // VENDORS (8 tables)
  // ============================================================================

  vendors: [
    { name: 'id', type: 'uuid', constraints: 'PRIMARY KEY', description: 'Vendor identifier' },
    { name: 'user_id', type: 'uuid', constraints: 'UNIQUE, REFERENCES auth.users(id)', description: 'Associated user account' },
    { name: 'business_name', type: 'text', constraints: 'NOT NULL', description: 'Business name' },
    { name: 'business_type', type: 'text', constraints: 'CHECK (spa, salon, wellness_center, home_service, hotel_spa)', description: 'Business type' },
    { name: 'registration_number', type: 'text', constraints: '', description: 'Business registration number' },
    { name: 'gst_number', type: 'text', constraints: '', description: 'GST number' },
    { name: 'pan_number', type: 'text', constraints: '', description: 'PAN number' },
    { name: 'contact_person', type: 'text', constraints: 'NOT NULL', description: 'Contact person name' },
    { name: 'contact_mobile', type: 'text', constraints: 'NOT NULL', description: 'Contact mobile' },
    { name: 'contact_email', type: 'text', constraints: 'NOT NULL', description: 'Contact email' },
    { name: 'business_address', type: 'jsonb', constraints: 'NOT NULL', description: 'Business address' },
    { name: 'operating_hours', type: 'jsonb', constraints: '', description: 'Operating hours' },
    { name: 'services_offered', type: 'uuid[]', constraints: '', description: 'Service IDs offered' },
    { name: 'rating', type: 'numeric(3,2)', constraints: 'DEFAULT 0, CHECK (0-5)', description: 'Average rating' },
    { name: 'total_reviews', type: 'integer', constraints: 'DEFAULT 0', description: 'Total review count' },
    { name: 'total_bookings', type: 'integer', constraints: 'DEFAULT 0', description: 'Total bookings' },
    { name: 'verification_status', type: 'text', constraints: 'DEFAULT pending, CHECK (pending, verified, rejected)', description: 'Verification status' },
    { name: 'verification_documents', type: 'jsonb', constraints: '', description: 'Verification documents' },
    { name: 'commission_rate', type: 'numeric(5,2)', constraints: 'DEFAULT 15.00', description: 'Commission rate %' },
    { name: 'status', type: 'text', constraints: 'DEFAULT active, CHECK (active, inactive, suspended, terminated)', description: 'Vendor status' },
    { name: 'created_at', type: 'timestamptz', constraints: 'DEFAULT now()', description: 'Registration date' },
    { name: 'updated_at', type: 'timestamptz', constraints: 'DEFAULT now()', description: 'Update timestamp' },
  ],

  vendor_documents: [
    { name: 'id', type: 'uuid', constraints: 'PRIMARY KEY', description: 'Document identifier' },
    { name: 'vendor_id', type: 'uuid', constraints: 'NOT NULL, REFERENCES vendors(id)', description: 'Vendor reference' },
    { name: 'document_type', type: 'text', constraints: 'NOT NULL, CHECK (gst, pan, registration, license, insurance, other)', description: 'Document type' },
    { name: 'document_name', type: 'text', constraints: 'NOT NULL', description: 'Document name' },
    { name: 'file_url', type: 'text', constraints: 'NOT NULL', description: 'File URL' },
    { name: 'file_type', type: 'text', constraints: '', description: 'File MIME type' },
    { name: 'verified', type: 'boolean', constraints: 'DEFAULT false', description: 'Verification status' },
    { name: 'verified_at', type: 'timestamptz', constraints: '', description: 'Verification timestamp' },
    { name: 'expiry_date', type: 'date', constraints: '', description: 'Document expiry' },
    { name: 'created_at', type: 'timestamptz', constraints: 'DEFAULT now()', description: 'Upload timestamp' },
  ],

  vendor_services: [
    { name: 'id', type: 'uuid', constraints: 'PRIMARY KEY', description: 'Vendor-service mapping ID' },
    { name: 'vendor_id', type: 'uuid', constraints: 'NOT NULL, REFERENCES vendors(id)', description: 'Vendor reference' },
    { name: 'service_id', type: 'uuid', constraints: 'NOT NULL, REFERENCES services(id)', description: 'Service reference' },
    { name: 'is_available', type: 'boolean', constraints: 'DEFAULT true', description: 'Availability status' },
    { name: 'custom_price', type: 'numeric(10,2)', constraints: '', description: 'Custom pricing' },
    { name: 'custom_duration', type: 'integer', constraints: '', description: 'Custom duration (minutes)' },
    { name: 'created_at', type: 'timestamptz', constraints: 'DEFAULT now()', description: 'Creation timestamp' },
    { name: 'updated_at', type: 'timestamptz', constraints: 'DEFAULT now()', description: 'Update timestamp' },
  ],

  vendor_staff: [
    { name: 'id', type: 'uuid', constraints: 'PRIMARY KEY', description: 'Staff identifier' },
    { name: 'vendor_id', type: 'uuid', constraints: 'NOT NULL, REFERENCES vendors(id)', description: 'Vendor reference' },
    { name: 'user_id', type: 'uuid', constraints: 'REFERENCES auth.users(id)', description: 'User account reference' },
    { name: 'name', type: 'text', constraints: 'NOT NULL', description: 'Staff name' },
    { name: 'role', type: 'text', constraints: 'NOT NULL, CHECK (manager, receptionist, accountant, admin)', description: 'Staff role' },
    { name: 'mobile', type: 'text', constraints: 'NOT NULL', description: 'Mobile number' },
    { name: 'email', type: 'text', constraints: '', description: 'Email address' },
    { name: 'permissions', type: 'jsonb', constraints: "DEFAULT '[]'", description: 'Permission array' },
    { name: 'status', type: 'text', constraints: 'DEFAULT active, CHECK (active, inactive)', description: 'Staff status' },
    { name: 'created_at', type: 'timestamptz', constraints: 'DEFAULT now()', description: 'Creation timestamp' },
    { name: 'updated_at', type: 'timestamptz', constraints: 'DEFAULT now()', description: 'Update timestamp' },
  ],

  vendor_payouts: [
    { name: 'id', type: 'uuid', constraints: 'PRIMARY KEY', description: 'Payout identifier' },
    { name: 'vendor_id', type: 'uuid', constraints: 'NOT NULL, REFERENCES vendors(id)', description: 'Vendor reference' },
    { name: 'period_start', type: 'date', constraints: 'NOT NULL', description: 'Period start date' },
    { name: 'period_end', type: 'date', constraints: 'NOT NULL', description: 'Period end date' },
    { name: 'total_bookings', type: 'integer', constraints: 'DEFAULT 0', description: 'Booking count' },
    { name: 'gross_amount', type: 'numeric(12,2)', constraints: 'NOT NULL', description: 'Gross amount' },
    { name: 'commission_amount', type: 'numeric(12,2)', constraints: 'NOT NULL', description: 'Commission deducted' },
    { name: 'tds_amount', type: 'numeric(12,2)', constraints: 'DEFAULT 0', description: 'TDS amount' },
    { name: 'net_amount', type: 'numeric(12,2)', constraints: 'NOT NULL', description: 'Net payout amount' },
    { name: 'payout_status', type: 'text', constraints: 'DEFAULT pending, CHECK (pending, processing, completed, failed)', description: 'Payout status' },
    { name: 'payment_method', type: 'text', constraints: '', description: 'Payment method' },
    { name: 'payment_reference', type: 'text', constraints: '', description: 'Payment reference' },
    { name: 'payment_date', type: 'timestamptz', constraints: '', description: 'Payment date' },
    { name: 'notes', type: 'text', constraints: '', description: 'Payout notes' },
    { name: 'created_at', type: 'timestamptz', constraints: 'DEFAULT now()', description: 'Creation timestamp' },
    { name: 'updated_at', type: 'timestamptz', constraints: 'DEFAULT now()', description: 'Update timestamp' },
  ],

  vendor_reviews: [
    { name: 'id', type: 'uuid', constraints: 'PRIMARY KEY', description: 'Review identifier' },
    { name: 'vendor_id', type: 'uuid', constraints: 'NOT NULL, REFERENCES vendors(id)', description: 'Vendor reference' },
    { name: 'customer_id', type: 'uuid', constraints: 'NOT NULL, REFERENCES auth.users(id)', description: 'Customer reference' },
    { name: 'booking_id', type: 'uuid', constraints: 'REFERENCES bookings(id)', description: 'Related booking' },
    { name: 'rating', type: 'integer', constraints: 'NOT NULL, CHECK (1-5)', description: 'Overall rating (1-5)' },
    { name: 'review_title', type: 'text', constraints: '', description: 'Review title' },
    { name: 'review_text', type: 'text', constraints: '', description: 'Review text' },
    { name: 'service_quality_rating', type: 'integer', constraints: 'CHECK (1-5)', description: 'Service quality rating' },
    { name: 'cleanliness_rating', type: 'integer', constraints: 'CHECK (1-5)', description: 'Cleanliness rating' },
    { name: 'value_rating', type: 'integer', constraints: 'CHECK (1-5)', description: 'Value for money rating' },
    { name: 'photos', type: 'text[]', constraints: '', description: 'Review photos' },
    { name: 'status', type: 'text', constraints: 'DEFAULT pending, CHECK (pending, approved, rejected)', description: 'Review status' },
    { name: 'created_at', type: 'timestamptz', constraints: 'DEFAULT now()', description: 'Review timestamp' },
  ],

  vendor_applications: [
    { name: 'id', type: 'uuid', constraints: 'PRIMARY KEY', description: 'Application identifier' },
    { name: 'user_id', type: 'uuid', constraints: 'NOT NULL, REFERENCES auth.users(id)', description: 'Applicant user' },
    { name: 'business_name', type: 'text', constraints: 'NOT NULL', description: 'Business name' },
    { name: 'business_type', type: 'text', constraints: 'NOT NULL', description: 'Business type' },
    { name: 'contact_person', type: 'text', constraints: 'NOT NULL', description: 'Contact person' },
    { name: 'contact_mobile', type: 'text', constraints: 'NOT NULL', description: 'Contact mobile' },
    { name: 'contact_email', type: 'text', constraints: 'NOT NULL', description: 'Contact email' },
    { name: 'business_address', type: 'jsonb', constraints: 'NOT NULL', description: 'Business address' },
    { name: 'application_data', type: 'jsonb', constraints: 'DEFAULT {}', description: 'Additional data' },
    { name: 'application_status', type: 'text', constraints: 'DEFAULT pending, CHECK (pending, under_review, approved, rejected)', description: 'Application status' },
    { name: 'reviewed_by', type: 'uuid', constraints: 'REFERENCES auth.users(id)', description: 'Reviewer user' },
    { name: 'reviewed_at', type: 'timestamptz', constraints: '', description: 'Review timestamp' },
    { name: 'rejection_reason', type: 'text', constraints: '', description: 'Rejection reason' },
    { name: 'created_at', type: 'timestamptz', constraints: 'DEFAULT now()', description: 'Application date' },
    { name: 'updated_at', type: 'timestamptz', constraints: 'DEFAULT now()', description: 'Update timestamp' },
  ],

  vendor_availability: [
    { name: 'id', type: 'uuid', constraints: 'PRIMARY KEY', description: 'Availability identifier' },
    { name: 'vendor_id', type: 'uuid', constraints: 'NOT NULL, REFERENCES vendors(id)', description: 'Vendor reference' },
    { name: 'day_of_week', type: 'integer', constraints: 'NOT NULL, CHECK (0-6)', description: 'Day of week (0=Sun)' },
    { name: 'open_time', type: 'time', constraints: 'NOT NULL', description: 'Opening time' },
    { name: 'close_time', type: 'time', constraints: 'NOT NULL', description: 'Closing time' },
    { name: 'is_open', type: 'boolean', constraints: 'DEFAULT true', description: 'Open status' },
    { name: 'break_start', type: 'time', constraints: '', description: 'Break start time' },
    { name: 'break_end', type: 'time', constraints: '', description: 'Break end time' },
    { name: 'created_at', type: 'timestamptz', constraints: 'DEFAULT now()', description: 'Creation timestamp' },
  ],

  // ============================================================================
  // THERAPISTS (6 tables)
  // ============================================================================

  therapists: [
    { name: 'id', type: 'uuid', constraints: 'PRIMARY KEY', description: 'Therapist identifier' },
    { name: 'user_id', type: 'uuid', constraints: 'UNIQUE, REFERENCES auth.users(id)', description: 'User account reference' },
    { name: 'vendor_id', type: 'uuid', constraints: 'NOT NULL, REFERENCES vendors(id)', description: 'Vendor reference' },
    { name: 'name', type: 'text', constraints: 'NOT NULL', description: 'Therapist name' },
    { name: 'email', type: 'text', constraints: '', description: 'Email address' },
    { name: 'mobile', type: 'text', constraints: 'NOT NULL', description: 'Mobile number' },
    { name: 'gender', type: 'text', constraints: 'CHECK (male, female, other)', description: 'Gender' },
    { name: 'date_of_birth', type: 'date', constraints: '', description: 'Date of birth' },
    { name: 'profile_image', type: 'text', constraints: '', description: 'Profile image URL' },
    { name: 'specialization', type: 'text[]', constraints: '', description: 'Specialization areas' },
    { name: 'experience_years', type: 'integer', constraints: 'DEFAULT 0', description: 'Years of experience' },
    { name: 'certifications', type: 'jsonb', constraints: "DEFAULT '[]'", description: 'Certifications' },
    { name: 'languages', type: 'text[]', constraints: '', description: 'Languages spoken' },
    { name: 'rating', type: 'numeric(3,2)', constraints: 'DEFAULT 0, CHECK (0-5)', description: 'Average rating' },
    { name: 'total_reviews', type: 'integer', constraints: 'DEFAULT 0', description: 'Total reviews' },
    { name: 'total_services', type: 'integer', constraints: 'DEFAULT 0', description: 'Total services done' },
    { name: 'total_earnings', type: 'numeric(12,2)', constraints: 'DEFAULT 0', description: 'Total earnings' },
    { name: 'status', type: 'text', constraints: 'DEFAULT active, CHECK (active, inactive, on_leave, terminated)', description: 'Therapist status' },
    { name: 'availability_status', type: 'text', constraints: 'DEFAULT offline, CHECK (available, busy, offline)', description: 'Availability status' },
    { name: 'address', type: 'jsonb', constraints: '', description: 'Address information' },
    { name: 'emergency_contact', type: 'jsonb', constraints: '', description: 'Emergency contact' },
    { name: 'bank_details', type: 'jsonb', constraints: '', description: 'Bank account details' },
    { name: 'created_at', type: 'timestamptz', constraints: 'DEFAULT now()', description: 'Registration date' },
    { name: 'updated_at', type: 'timestamptz', constraints: 'DEFAULT now()', description: 'Update timestamp' },
  ],

  therapist_schedules: [
    { name: 'id', type: 'uuid', constraints: 'PRIMARY KEY', description: 'Schedule identifier' },
    { name: 'therapist_id', type: 'uuid', constraints: 'NOT NULL, REFERENCES therapists(id)', description: 'Therapist reference' },
    { name: 'day_of_week', type: 'integer', constraints: 'NOT NULL, CHECK (0-6)', description: 'Day of week (0=Sun)' },
    { name: 'start_time', type: 'time', constraints: 'NOT NULL', description: 'Start time' },
    { name: 'end_time', type: 'time', constraints: 'NOT NULL', description: 'End time' },
    { name: 'is_available', type: 'boolean', constraints: 'DEFAULT true', description: 'Availability flag' },
    { name: 'break_start', type: 'time', constraints: '', description: 'Break start time' },
    { name: 'break_end', type: 'time', constraints: '', description: 'Break end time' },
    { name: 'max_bookings', type: 'integer', constraints: 'DEFAULT 5', description: 'Max bookings per day' },
    { name: 'created_at', type: 'timestamptz', constraints: 'DEFAULT now()', description: 'Creation timestamp' },
    { name: 'updated_at', type: 'timestamptz', constraints: 'DEFAULT now()', description: 'Update timestamp' },
  ],

  therapist_leaves: [
    { name: 'id', type: 'uuid', constraints: 'PRIMARY KEY', description: 'Leave identifier' },
    { name: 'therapist_id', type: 'uuid', constraints: 'NOT NULL, REFERENCES therapists(id)', description: 'Therapist reference' },
    { name: 'leave_type', type: 'text', constraints: 'NOT NULL, CHECK (sick, casual, emergency, annual, unpaid)', description: 'Leave type' },
    { name: 'start_date', type: 'date', constraints: 'NOT NULL', description: 'Leave start date' },
    { name: 'end_date', type: 'date', constraints: 'NOT NULL', description: 'Leave end date' },
    { name: 'total_days', type: 'integer', constraints: 'GENERATED', description: 'Total leave days (computed)' },
    { name: 'reason', type: 'text', constraints: 'NOT NULL', description: 'Leave reason' },
    { name: 'status', type: 'text', constraints: 'DEFAULT pending, CHECK (pending, approved, rejected, cancelled)', description: 'Leave status' },
    { name: 'approved_by', type: 'uuid', constraints: 'REFERENCES auth.users(id)', description: 'Approver user' },
    { name: 'approved_at', type: 'timestamptz', constraints: '', description: 'Approval timestamp' },
    { name: 'rejection_reason', type: 'text', constraints: '', description: 'Rejection reason' },
    { name: 'documents', type: 'text[]', constraints: '', description: 'Supporting documents' },
    { name: 'created_at', type: 'timestamptz', constraints: 'DEFAULT now()', description: 'Request timestamp' },
    { name: 'updated_at', type: 'timestamptz', constraints: 'DEFAULT now()', description: 'Update timestamp' },
  ],

  therapist_locations: [
    { name: 'id', type: 'uuid', constraints: 'PRIMARY KEY', description: 'Location identifier' },
    { name: 'therapist_id', type: 'uuid', constraints: 'NOT NULL, REFERENCES therapists(id)', description: 'Therapist reference' },
    { name: 'booking_id', type: 'uuid', constraints: 'REFERENCES bookings(id)', description: 'Related booking' },
    { name: 'latitude', type: 'numeric(10,8)', constraints: 'NOT NULL', description: 'GPS latitude' },
    { name: 'longitude', type: 'numeric(11,8)', constraints: 'NOT NULL', description: 'GPS longitude' },
    { name: 'accuracy', type: 'numeric(10,2)', constraints: '', description: 'GPS accuracy in meters' },
    { name: 'altitude', type: 'numeric(10,2)', constraints: '', description: 'Altitude in meters' },
    { name: 'speed', type: 'numeric(10,2)', constraints: '', description: 'Speed in m/s' },
    { name: 'heading', type: 'numeric(5,2)', constraints: '', description: 'Heading in degrees' },
    { name: 'battery_level', type: 'integer', constraints: 'CHECK (0-100)', description: 'Device battery level %' },
    { name: 'is_moving', type: 'boolean', constraints: 'DEFAULT false', description: 'Movement status' },
    { name: 'timestamp', type: 'timestamptz', constraints: 'DEFAULT now()', description: 'Location timestamp' },
  ],

  therapist_assignments: [
    { name: 'id', type: 'uuid', constraints: 'PRIMARY KEY', description: 'Assignment identifier' },
    { name: 'booking_id', type: 'uuid', constraints: 'NOT NULL, REFERENCES bookings(id)', description: 'Booking reference' },
    { name: 'therapist_id', type: 'uuid', constraints: 'NOT NULL, REFERENCES therapists(id)', description: 'Therapist reference' },
    { name: 'vendor_id', type: 'uuid', constraints: 'NOT NULL, REFERENCES vendors(id)', description: 'Vendor reference' },
    { name: 'customer_id', type: 'uuid', constraints: 'NOT NULL, REFERENCES auth.users(id)', description: 'Customer reference' },
    { name: 'service_id', type: 'uuid', constraints: 'NOT NULL, REFERENCES services(id)', description: 'Service reference' },
    { name: 'assignment_date', type: 'date', constraints: 'NOT NULL', description: 'Assignment date' },
    { name: 'assignment_time', type: 'time', constraints: 'NOT NULL', description: 'Assignment time' },
    { name: 'status', type: 'text', constraints: 'DEFAULT assigned, CHECK (enum)', description: 'Assignment status' },
    { name: 'location_address', type: 'text', constraints: 'NOT NULL', description: 'Service location address' },
    { name: 'location_latitude', type: 'numeric(10,8)', constraints: '', description: 'Location latitude' },
    { name: 'location_longitude', type: 'numeric(11,8)', constraints: '', description: 'Location longitude' },
    { name: 'estimated_duration', type: 'integer', constraints: 'NOT NULL', description: 'Estimated duration (minutes)' },
    { name: 'actual_start_time', type: 'timestamptz', constraints: '', description: 'Actual start time' },
    { name: 'actual_end_time', type: 'timestamptz', constraints: '', description: 'Actual end time' },
    { name: 'actual_duration', type: 'integer', constraints: '', description: 'Actual duration (minutes)' },
    { name: 'distance_traveled', type: 'numeric(10,2)', constraints: '', description: 'Distance traveled (km)' },
    { name: 'travel_time', type: 'integer', constraints: '', description: 'Travel time (minutes)' },
    { name: 'customer_rating', type: 'integer', constraints: 'CHECK (1-5)', description: 'Customer rating' },
    { name: 'customer_feedback', type: 'text', constraints: '', description: 'Customer feedback' },
    { name: 'tips_amount', type: 'numeric(10,2)', constraints: 'DEFAULT 0', description: 'Tips received' },
    { name: 'notes', type: 'text', constraints: '', description: 'Assignment notes' },
    { name: 'created_at', type: 'timestamptz', constraints: 'DEFAULT now()', description: 'Creation timestamp' },
    { name: 'updated_at', type: 'timestamptz', constraints: 'DEFAULT now()', description: 'Update timestamp' },
  ],

  therapist_performance: [
    { name: 'id', type: 'uuid', constraints: 'PRIMARY KEY', description: 'Performance record ID' },
    { name: 'therapist_id', type: 'uuid', constraints: 'NOT NULL, REFERENCES therapists(id)', description: 'Therapist reference' },
    { name: 'month', type: 'date', constraints: 'NOT NULL', description: 'Performance month' },
    { name: 'total_assignments', type: 'integer', constraints: 'DEFAULT 0', description: 'Total assignments' },
    { name: 'completed_assignments', type: 'integer', constraints: 'DEFAULT 0', description: 'Completed assignments' },
    { name: 'cancelled_assignments', type: 'integer', constraints: 'DEFAULT 0', description: 'Cancelled assignments' },
    { name: 'average_rating', type: 'numeric(3,2)', constraints: 'DEFAULT 0', description: 'Average rating' },
    { name: 'total_earnings', type: 'numeric(12,2)', constraints: 'DEFAULT 0', description: 'Total earnings' },
    { name: 'total_tips', type: 'numeric(12,2)', constraints: 'DEFAULT 0', description: 'Total tips' },
    { name: 'on_time_percentage', type: 'numeric(5,2)', constraints: 'DEFAULT 0', description: 'On-time delivery %' },
    { name: 'customer_satisfaction', type: 'numeric(5,2)', constraints: 'DEFAULT 0', description: 'Customer satisfaction %' },
    { name: 'created_at', type: 'timestamptz', constraints: 'DEFAULT now()', description: 'Creation timestamp' },
    { name: 'updated_at', type: 'timestamptz', constraints: 'DEFAULT now()', description: 'Update timestamp' },
  ],

  // ============================================================================
  // SERVICES (5 tables)
  // ============================================================================

  service_categories: [
    { name: 'id', type: 'uuid', constraints: 'PRIMARY KEY', description: 'Category identifier' },
    { name: 'name', type: 'text', constraints: 'UNIQUE, NOT NULL', description: 'Category name' },
    { name: 'slug', type: 'text', constraints: 'UNIQUE, NOT NULL', description: 'URL-friendly slug' },
    { name: 'description', type: 'text', constraints: '', description: 'Category description' },
    { name: 'icon', type: 'text', constraints: '', description: 'Icon identifier' },
    { name: 'image_url', type: 'text', constraints: '', description: 'Category image' },
    { name: 'display_order', type: 'integer', constraints: 'DEFAULT 0', description: 'Display order' },
    { name: 'is_active', type: 'boolean', constraints: 'DEFAULT true', description: 'Active status' },
    { name: 'created_at', type: 'timestamptz', constraints: 'DEFAULT now()', description: 'Creation timestamp' },
    { name: 'updated_at', type: 'timestamptz', constraints: 'DEFAULT now()', description: 'Update timestamp' },
  ],

  services: [
    { name: 'id', type: 'uuid', constraints: 'PRIMARY KEY', description: 'Service identifier' },
    { name: 'name', type: 'text', constraints: 'NOT NULL', description: 'Service name' },
    { name: 'slug', type: 'text', constraints: 'UNIQUE, NOT NULL', description: 'URL-friendly slug' },
    { name: 'category_id', type: 'uuid', constraints: 'REFERENCES service_categories(id)', description: 'Category reference' },
    { name: 'description', type: 'text', constraints: '', description: 'Service description' },
    { name: 'short_description', type: 'text', constraints: '', description: 'Short description' },
    { name: 'benefits', type: 'text[]', constraints: '', description: 'Service benefits' },
    { name: 'duration', type: 'integer', constraints: 'NOT NULL', description: 'Duration in minutes' },
    { name: 'base_price', type: 'numeric(10,2)', constraints: 'NOT NULL', description: 'Base price' },
    { name: 'discounted_price', type: 'numeric(10,2)', constraints: '', description: 'Discounted price' },
    { name: 'image_url', type: 'text', constraints: '', description: 'Primary image' },
    { name: 'images', type: 'text[]', constraints: '', description: 'Additional images' },
    { name: 'techniques', type: 'text', constraints: '', description: 'Techniques used' },
    { name: 'focus_areas', type: 'text[]', constraints: '', description: 'Focus areas' },
    { name: 'contraindications', type: 'text', constraints: '', description: 'Contraindications' },
    { name: 'is_popular', type: 'boolean', constraints: 'DEFAULT false', description: 'Popular service flag' },
    { name: 'is_featured', type: 'boolean', constraints: 'DEFAULT false', description: 'Featured service flag' },
    { name: 'is_active', type: 'boolean', constraints: 'DEFAULT true', description: 'Active status' },
    { name: 'display_order', type: 'integer', constraints: 'DEFAULT 0', description: 'Display order' },
    { name: 'metadata', type: 'jsonb', constraints: 'DEFAULT {}', description: 'Additional metadata' },
    { name: 'created_at', type: 'timestamptz', constraints: 'DEFAULT now()', description: 'Creation timestamp' },
    { name: 'updated_at', type: 'timestamptz', constraints: 'DEFAULT now()', description: 'Update timestamp' },
  ],

  addon_services: [
    { name: 'id', type: 'uuid', constraints: 'PRIMARY KEY', description: 'Addon identifier' },
    { name: 'name', type: 'text', constraints: 'NOT NULL', description: 'Addon name' },
    { name: 'description', type: 'text', constraints: '', description: 'Addon description' },
    { name: 'duration', type: 'integer', constraints: 'NOT NULL', description: 'Duration in minutes' },
    { name: 'price', type: 'numeric(10,2)', constraints: 'NOT NULL', description: 'Addon price' },
    { name: 'image_url', type: 'text', constraints: '', description: 'Addon image' },
    { name: 'is_active', type: 'boolean', constraints: 'DEFAULT true', description: 'Active status' },
    { name: 'created_at', type: 'timestamptz', constraints: 'DEFAULT now()', description: 'Creation timestamp' },
    { name: 'updated_at', type: 'timestamptz', constraints: 'DEFAULT now()', description: 'Update timestamp' },
  ],

  service_packages: [
    { name: 'id', type: 'uuid', constraints: 'PRIMARY KEY', description: 'Package identifier' },
    { name: 'name', type: 'text', constraints: 'NOT NULL', description: 'Package name' },
    { name: 'slug', type: 'text', constraints: 'UNIQUE, NOT NULL', description: 'URL-friendly slug' },
    { name: 'description', type: 'text', constraints: '', description: 'Package description' },
    { name: 'service_ids', type: 'uuid[]', constraints: 'NOT NULL', description: 'Service IDs in package' },
    { name: 'addon_ids', type: 'uuid[]', constraints: '', description: 'Addon IDs' },
    { name: 'total_duration', type: 'integer', constraints: 'NOT NULL', description: 'Total duration (minutes)' },
    { name: 'package_price', type: 'numeric(10,2)', constraints: 'NOT NULL', description: 'Package price' },
    { name: 'discount_percentage', type: 'numeric(5,2)', constraints: 'DEFAULT 0', description: 'Discount percentage' },
    { name: 'image_url', type: 'text', constraints: '', description: 'Package image' },
    { name: 'is_active', type: 'boolean', constraints: 'DEFAULT true', description: 'Active status' },
    { name: 'created_at', type: 'timestamptz', constraints: 'DEFAULT now()', description: 'Creation timestamp' },
    { name: 'updated_at', type: 'timestamptz', constraints: 'DEFAULT now()', description: 'Update timestamp' },
  ],

  reviews: [
    { name: 'id', type: 'uuid', constraints: 'PRIMARY KEY', description: 'Review identifier' },
    { name: 'reviewable_type', type: 'text', constraints: 'NOT NULL, CHECK (service, therapist, vendor, booking)', description: 'Entity type being reviewed' },
    { name: 'reviewable_id', type: 'uuid', constraints: 'NOT NULL', description: 'Entity identifier' },
    { name: 'customer_id', type: 'uuid', constraints: 'NOT NULL, REFERENCES auth.users(id)', description: 'Customer reference' },
    { name: 'booking_id', type: 'uuid', constraints: 'REFERENCES bookings(id)', description: 'Related booking' },
    { name: 'rating', type: 'integer', constraints: 'NOT NULL, CHECK (1-5)', description: 'Rating (1-5)' },
    { name: 'title', type: 'text', constraints: '', description: 'Review title' },
    { name: 'review_text', type: 'text', constraints: '', description: 'Review text' },
    { name: 'photos', type: 'text[]', constraints: '', description: 'Review photos' },
    { name: 'helpful_count', type: 'integer', constraints: 'DEFAULT 0', description: 'Helpful votes' },
    { name: 'status', type: 'text', constraints: 'DEFAULT pending, CHECK (pending, approved, rejected, flagged)', description: 'Review status' },
    { name: 'moderated_by', type: 'uuid', constraints: 'REFERENCES auth.users(id)', description: 'Moderator user' },
    { name: 'moderation_notes', type: 'text', constraints: '', description: 'Moderation notes' },
    { name: 'created_at', type: 'timestamptz', constraints: 'DEFAULT now()', description: 'Review timestamp' },
    { name: 'updated_at', type: 'timestamptz', constraints: 'DEFAULT now()', description: 'Update timestamp' },
  ],

  // ============================================================================
  // CUSTOMERS (4 tables)
  // ============================================================================

  customers: [
    { name: 'id', type: 'uuid', constraints: 'PRIMARY KEY, REFERENCES auth.users(id)', description: 'Customer identifier' },
    { name: 'membership_tier', type: 'text', constraints: 'DEFAULT silver, CHECK (silver, gold, platinum, diamond)', description: 'Membership tier' },
    { name: 'membership_start_date', type: 'date', constraints: 'DEFAULT CURRENT_DATE', description: 'Membership start' },
    { name: 'loyalty_points', type: 'integer', constraints: 'DEFAULT 0', description: 'Loyalty points balance' },
    { name: 'total_bookings', type: 'integer', constraints: 'DEFAULT 0', description: 'Total bookings' },
    { name: 'total_spent', type: 'numeric(12,2)', constraints: 'DEFAULT 0', description: 'Total amount spent' },
    { name: 'total_saved', type: 'numeric(12,2)', constraints: 'DEFAULT 0', description: 'Total savings' },
    { name: 'preferred_services', type: 'uuid[]', constraints: '', description: 'Preferred service IDs' },
    { name: 'preferred_therapists', type: 'uuid[]', constraints: '', description: 'Preferred therapist IDs' },
    { name: 'preferred_vendors', type: 'uuid[]', constraints: '', description: 'Preferred vendor IDs' },
    { name: 'preferred_gender', type: 'text', constraints: 'CHECK (male, female, any)', description: 'Preferred therapist gender' },
    { name: 'allergies', type: 'text[]', constraints: '', description: 'Allergy information' },
    { name: 'medical_conditions', type: 'text[]', constraints: '', description: 'Medical conditions' },
    { name: 'special_requirements', type: 'text', constraints: '', description: 'Special requirements' },
    { name: 'referral_code', type: 'text', constraints: 'UNIQUE', description: 'Referral code' },
    { name: 'referred_by', type: 'uuid', constraints: 'REFERENCES customers(id)', description: 'Referrer customer' },
    { name: 'referral_count', type: 'integer', constraints: 'DEFAULT 0', description: 'Referral count' },
    { name: 'last_booking_date', type: 'timestamptz', constraints: '', description: 'Last booking date' },
    { name: 'created_at', type: 'timestamptz', constraints: 'DEFAULT now()', description: 'Registration date' },
    { name: 'updated_at', type: 'timestamptz', constraints: 'DEFAULT now()', description: 'Update timestamp' },
  ],

  customer_addresses: [
    { name: 'id', type: 'uuid', constraints: 'PRIMARY KEY', description: 'Address identifier' },
    { name: 'customer_id', type: 'uuid', constraints: 'NOT NULL, REFERENCES customers(id)', description: 'Customer reference' },
    { name: 'address_type', type: 'text', constraints: 'NOT NULL, CHECK (home, work, hotel, other)', description: 'Address type' },
    { name: 'label', type: 'text', constraints: '', description: 'Address label' },
    { name: 'address_line1', type: 'text', constraints: 'NOT NULL', description: 'Address line 1' },
    { name: 'address_line2', type: 'text', constraints: '', description: 'Address line 2' },
    { name: 'landmark', type: 'text', constraints: '', description: 'Landmark' },
    { name: 'city', type: 'text', constraints: 'NOT NULL', description: 'City' },
    { name: 'state', type: 'text', constraints: 'NOT NULL', description: 'State' },
    { name: 'pincode', type: 'text', constraints: 'NOT NULL', description: 'Pincode' },
    { name: 'country', type: 'text', constraints: 'DEFAULT India', description: 'Country' },
    { name: 'latitude', type: 'numeric(10,8)', constraints: '', description: 'GPS latitude' },
    { name: 'longitude', type: 'numeric(11,8)', constraints: '', description: 'GPS longitude' },
    { name: 'is_default', type: 'boolean', constraints: 'DEFAULT false', description: 'Default address flag' },
    { name: 'delivery_instructions', type: 'text', constraints: '', description: 'Delivery instructions' },
    { name: 'created_at', type: 'timestamptz', constraints: 'DEFAULT now()', description: 'Creation timestamp' },
    { name: 'updated_at', type: 'timestamptz', constraints: 'DEFAULT now()', description: 'Update timestamp' },
  ],

  customer_referrals: [
    { name: 'id', type: 'uuid', constraints: 'PRIMARY KEY', description: 'Referral identifier' },
    { name: 'referrer_id', type: 'uuid', constraints: 'NOT NULL, REFERENCES customers(id)', description: 'Referrer customer' },
    { name: 'referee_id', type: 'uuid', constraints: 'NOT NULL, REFERENCES customers(id)', description: 'Referee customer' },
    { name: 'referral_code', type: 'text', constraints: 'NOT NULL', description: 'Referral code used' },
    { name: 'status', type: 'text', constraints: 'DEFAULT pending, CHECK (pending, completed, rewarded)', description: 'Referral status' },
    { name: 'referrer_reward', type: 'numeric(10,2)', constraints: 'DEFAULT 0', description: 'Referrer reward amount' },
    { name: 'referee_reward', type: 'numeric(10,2)', constraints: 'DEFAULT 0', description: 'Referee reward amount' },
    { name: 'first_booking_id', type: 'uuid', constraints: 'REFERENCES bookings(id)', description: 'First booking by referee' },
    { name: 'completed_at', type: 'timestamptz', constraints: '', description: 'Completion timestamp' },
    { name: 'created_at', type: 'timestamptz', constraints: 'DEFAULT now()', description: 'Referral timestamp' },
  ],

  loyalty_points_transactions: [
    { name: 'id', type: 'uuid', constraints: 'PRIMARY KEY', description: 'Transaction identifier' },
    { name: 'customer_id', type: 'uuid', constraints: 'NOT NULL, REFERENCES customers(id)', description: 'Customer reference' },
    { name: 'transaction_type', type: 'text', constraints: 'NOT NULL, CHECK (earned, redeemed, expired, adjusted)', description: 'Transaction type' },
    { name: 'points', type: 'integer', constraints: 'NOT NULL', description: 'Points amount' },
    { name: 'booking_id', type: 'uuid', constraints: 'REFERENCES bookings(id)', description: 'Related booking' },
    { name: 'description', type: 'text', constraints: '', description: 'Transaction description' },
    { name: 'balance_after', type: 'integer', constraints: 'NOT NULL', description: 'Balance after transaction' },
    { name: 'expires_at', type: 'timestamptz', constraints: '', description: 'Expiry timestamp' },
    { name: 'created_at', type: 'timestamptz', constraints: 'DEFAULT now()', description: 'Transaction timestamp' },
  ],

  // ============================================================================
  // BOOKINGS (6 tables)
  // ============================================================================

  bookings: [
    { name: 'id', type: 'uuid', constraints: 'PRIMARY KEY', description: 'Booking identifier' },
    { name: 'booking_number', type: 'text', constraints: 'UNIQUE, NOT NULL', description: 'Booking number' },
    { name: 'customer_id', type: 'uuid', constraints: 'NOT NULL, REFERENCES customers(id)', description: 'Customer reference' },
    { name: 'vendor_id', type: 'uuid', constraints: 'NOT NULL, REFERENCES vendors(id)', description: 'Vendor reference' },
    { name: 'booking_type', type: 'text', constraints: 'NOT NULL, CHECK (home_service, spa_visit, hotel_service)', description: 'Booking type' },
    { name: 'service_location', type: 'jsonb', constraints: 'NOT NULL', description: 'Service location details' },
    { name: 'booking_date', type: 'date', constraints: 'NOT NULL', description: 'Booking date' },
    { name: 'booking_time', type: 'time', constraints: 'NOT NULL', description: 'Booking time' },
    { name: 'total_amount', type: 'numeric(10,2)', constraints: 'NOT NULL', description: 'Total amount' },
    { name: 'discount_amount', type: 'numeric(10,2)', constraints: 'DEFAULT 0', description: 'Discount amount' },
    { name: 'tax_amount', type: 'numeric(10,2)', constraints: 'DEFAULT 0', description: 'Tax amount' },
    { name: 'service_charge', type: 'numeric(10,2)', constraints: 'DEFAULT 0', description: 'Service charge' },
    { name: 'final_amount', type: 'numeric(10,2)', constraints: 'NOT NULL', description: 'Final payable amount' },
    { name: 'status', type: 'text', constraints: 'DEFAULT pending, CHECK (enum)', description: 'Booking status' },
    { name: 'payment_status', type: 'text', constraints: 'DEFAULT pending, CHECK (pending, partial, paid, refunded)', description: 'Payment status' },
    { name: 'special_instructions', type: 'text', constraints: '', description: 'Special instructions' },
    { name: 'cancellation_reason', type: 'text', constraints: '', description: 'Cancellation reason' },
    { name: 'cancelled_by', type: 'uuid', constraints: 'REFERENCES auth.users(id)', description: 'Cancelled by user' },
    { name: 'cancelled_at', type: 'timestamptz', constraints: '', description: 'Cancellation timestamp' },
    { name: 'created_at', type: 'timestamptz', constraints: 'DEFAULT now()', description: 'Booking creation' },
    { name: 'updated_at', type: 'timestamptz', constraints: 'DEFAULT now()', description: 'Update timestamp' },
  ],

  booking_items: [
    { name: 'id', type: 'uuid', constraints: 'PRIMARY KEY', description: 'Booking item identifier' },
    { name: 'booking_id', type: 'uuid', constraints: 'NOT NULL, REFERENCES bookings(id)', description: 'Booking reference' },
    { name: 'service_id', type: 'uuid', constraints: 'NOT NULL, REFERENCES services(id)', description: 'Service reference' },
    { name: 'service_name', type: 'text', constraints: 'NOT NULL', description: 'Service name (snapshot)' },
    { name: 'service_duration', type: 'integer', constraints: 'NOT NULL', description: 'Duration in minutes' },
    { name: 'service_price', type: 'numeric(10,2)', constraints: 'NOT NULL', description: 'Service price' },
    { name: 'quantity', type: 'integer', constraints: 'DEFAULT 1', description: 'Quantity' },
    { name: 'addon_services', type: 'jsonb', constraints: "DEFAULT '[]'", description: 'Addon services' },
    { name: 'subtotal', type: 'numeric(10,2)', constraints: 'NOT NULL', description: 'Item subtotal' },
    { name: 'therapist_id', type: 'uuid', constraints: 'REFERENCES therapists(id)', description: 'Assigned therapist' },
    { name: 'notes', type: 'text', constraints: '', description: 'Item notes' },
    { name: 'created_at', type: 'timestamptz', constraints: 'DEFAULT now()', description: 'Creation timestamp' },
  ],

  booking_status_history: [
    { name: 'id', type: 'uuid', constraints: 'PRIMARY KEY', description: 'Status history identifier' },
    { name: 'booking_id', type: 'uuid', constraints: 'NOT NULL, REFERENCES bookings(id)', description: 'Booking reference' },
    { name: 'from_status', type: 'text', constraints: '', description: 'Previous status' },
    { name: 'to_status', type: 'text', constraints: 'NOT NULL', description: 'New status' },
    { name: 'changed_by', type: 'uuid', constraints: 'REFERENCES auth.users(id)', description: 'Changed by user' },
    { name: 'reason', type: 'text', constraints: '', description: 'Change reason' },
    { name: 'metadata', type: 'jsonb', constraints: 'DEFAULT {}', description: 'Additional metadata' },
    { name: 'created_at', type: 'timestamptz', constraints: 'DEFAULT now()', description: 'Change timestamp' },
  ],

  booking_notes: [
    { name: 'id', type: 'uuid', constraints: 'PRIMARY KEY', description: 'Note identifier' },
    { name: 'booking_id', type: 'uuid', constraints: 'NOT NULL, REFERENCES bookings(id)', description: 'Booking reference' },
    { name: 'note_type', type: 'text', constraints: 'CHECK (customer, vendor, therapist, internal, system)', description: 'Note type' },
    { name: 'note', type: 'text', constraints: 'NOT NULL', description: 'Note text' },
    { name: 'created_by', type: 'uuid', constraints: 'REFERENCES auth.users(id)', description: 'Note author' },
    { name: 'is_internal', type: 'boolean', constraints: 'DEFAULT false', description: 'Internal note flag' },
    { name: 'created_at', type: 'timestamptz', constraints: 'DEFAULT now()', description: 'Note timestamp' },
  ],

  booking_cancellations: [
    { name: 'id', type: 'uuid', constraints: 'PRIMARY KEY', description: 'Cancellation identifier' },
    { name: 'booking_id', type: 'uuid', constraints: 'NOT NULL, REFERENCES bookings(id)', description: 'Booking reference' },
    { name: 'cancelled_by', type: 'uuid', constraints: 'NOT NULL, REFERENCES auth.users(id)', description: 'Cancelled by user' },
    { name: 'cancelled_by_role', type: 'text', constraints: 'NOT NULL, CHECK (customer, vendor, therapist, admin)', description: 'Canceller role' },
    { name: 'cancellation_reason', type: 'text', constraints: 'NOT NULL', description: 'Cancellation reason' },
    { name: 'refund_amount', type: 'numeric(10,2)', constraints: 'DEFAULT 0', description: 'Refund amount' },
    { name: 'refund_status', type: 'text', constraints: 'DEFAULT pending, CHECK (pending, processing, completed, failed)', description: 'Refund status' },
    { name: 'cancellation_charge', type: 'numeric(10,2)', constraints: 'DEFAULT 0', description: 'Cancellation charge' },
    { name: 'cancelled_at', type: 'timestamptz', constraints: 'DEFAULT now()', description: 'Cancellation timestamp' },
  ],

  booking_reschedules: [
    { name: 'id', type: 'uuid', constraints: 'PRIMARY KEY', description: 'Reschedule identifier' },
    { name: 'booking_id', type: 'uuid', constraints: 'NOT NULL, REFERENCES bookings(id)', description: 'Booking reference' },
    { name: 'old_date', type: 'date', constraints: 'NOT NULL', description: 'Original date' },
    { name: 'old_time', type: 'time', constraints: 'NOT NULL', description: 'Original time' },
    { name: 'new_date', type: 'date', constraints: 'NOT NULL', description: 'New date' },
    { name: 'new_time', type: 'time', constraints: 'NOT NULL', description: 'New time' },
    { name: 'requested_by', type: 'uuid', constraints: 'NOT NULL, REFERENCES auth.users(id)', description: 'Requester user' },
    { name: 'requested_by_role', type: 'text', constraints: 'NOT NULL, CHECK (customer, vendor, therapist, admin)', description: 'Requester role' },
    { name: 'reason', type: 'text', constraints: '', description: 'Reschedule reason' },
    { name: 'status', type: 'text', constraints: 'DEFAULT pending, CHECK (pending, approved, rejected)', description: 'Reschedule status' },
    { name: 'approved_by', type: 'uuid', constraints: 'REFERENCES auth.users(id)', description: 'Approver user' },
    { name: 'approved_at', type: 'timestamptz', constraints: '', description: 'Approval timestamp' },
    { name: 'reschedule_charge', type: 'numeric(10,2)', constraints: 'DEFAULT 0', description: 'Reschedule charge' },
    { name: 'created_at', type: 'timestamptz', constraints: 'DEFAULT now()', description: 'Request timestamp' },
  ],

  // ============================================================================
  // PAYMENTS & FINANCE (5 tables)
  // ============================================================================

  payment_methods: [
    { name: 'id', type: 'uuid', constraints: 'PRIMARY KEY', description: 'Payment method identifier' },
    { name: 'customer_id', type: 'uuid', constraints: 'NOT NULL, REFERENCES customers(id)', description: 'Customer reference' },
    { name: 'method_type', type: 'text', constraints: 'NOT NULL, CHECK (card, upi, wallet, netbanking)', description: 'Method type' },
    { name: 'is_primary', type: 'boolean', constraints: 'DEFAULT false', description: 'Primary method flag' },
    { name: 'card_last4', type: 'text', constraints: '', description: 'Last 4 digits of card' },
    { name: 'card_brand', type: 'text', constraints: '', description: 'Card brand' },
    { name: 'upi_id', type: 'text', constraints: '', description: 'UPI ID' },
    { name: 'wallet_provider', type: 'text', constraints: '', description: 'Wallet provider' },
    { name: 'is_active', type: 'boolean', constraints: 'DEFAULT true', description: 'Active status' },
    { name: 'created_at', type: 'timestamptz', constraints: 'DEFAULT now()', description: 'Creation timestamp' },
  ],

  payments: [
    { name: 'id', type: 'uuid', constraints: 'PRIMARY KEY', description: 'Payment identifier' },
    { name: 'transaction_id', type: 'text', constraints: 'UNIQUE, NOT NULL', description: 'Transaction ID' },
    { name: 'booking_id', type: 'uuid', constraints: 'NOT NULL, REFERENCES bookings(id)', description: 'Booking reference' },
    { name: 'customer_id', type: 'uuid', constraints: 'NOT NULL, REFERENCES customers(id)', description: 'Customer reference' },
    { name: 'vendor_id', type: 'uuid', constraints: 'NOT NULL, REFERENCES vendors(id)', description: 'Vendor reference' },
    { name: 'amount', type: 'numeric(10,2)', constraints: 'NOT NULL', description: 'Payment amount' },
    { name: 'tax_amount', type: 'numeric(10,2)', constraints: 'DEFAULT 0', description: 'Tax amount' },
    { name: 'discount_amount', type: 'numeric(10,2)', constraints: 'DEFAULT 0', description: 'Discount amount' },
    { name: 'convenience_fee', type: 'numeric(10,2)', constraints: 'DEFAULT 0', description: 'Convenience fee' },
    { name: 'total_amount', type: 'numeric(10,2)', constraints: 'NOT NULL', description: 'Total amount' },
    { name: 'payment_method', type: 'text', constraints: 'NOT NULL, CHECK (enum)', description: 'Payment method' },
    { name: 'payment_gateway', type: 'text', constraints: '', description: 'Gateway used' },
    { name: 'gateway_transaction_id', type: 'text', constraints: '', description: 'Gateway transaction ID' },
    { name: 'gateway_response', type: 'jsonb', constraints: '', description: 'Gateway response' },
    { name: 'status', type: 'text', constraints: 'DEFAULT pending, CHECK (enum)', description: 'Payment status' },
    { name: 'payment_date', type: 'timestamptz', constraints: '', description: 'Payment timestamp' },
    { name: 'refund_amount', type: 'numeric(10,2)', constraints: 'DEFAULT 0', description: 'Refund amount' },
    { name: 'refund_date', type: 'timestamptz', constraints: '', description: 'Refund timestamp' },
    { name: 'refund_reason', type: 'text', constraints: '', description: 'Refund reason' },
    { name: 'metadata', type: 'jsonb', constraints: 'DEFAULT {}', description: 'Additional metadata' },
    { name: 'created_at', type: 'timestamptz', constraints: 'DEFAULT now()', description: 'Creation timestamp' },
    { name: 'updated_at', type: 'timestamptz', constraints: 'DEFAULT now()', description: 'Update timestamp' },
  ],

  refunds: [
    { name: 'id', type: 'uuid', constraints: 'PRIMARY KEY', description: 'Refund identifier' },
    { name: 'payment_id', type: 'uuid', constraints: 'NOT NULL, REFERENCES payments(id)', description: 'Payment reference' },
    { name: 'booking_id', type: 'uuid', constraints: 'NOT NULL, REFERENCES bookings(id)', description: 'Booking reference' },
    { name: 'customer_id', type: 'uuid', constraints: 'NOT NULL, REFERENCES customers(id)', description: 'Customer reference' },
    { name: 'refund_amount', type: 'numeric(10,2)', constraints: 'NOT NULL', description: 'Refund amount' },
    { name: 'refund_reason', type: 'text', constraints: 'NOT NULL', description: 'Refund reason' },
    { name: 'refund_type', type: 'text', constraints: 'NOT NULL, CHECK (full, partial, cancellation, adjustment)', description: 'Refund type' },
    { name: 'refund_method', type: 'text', constraints: '', description: 'Refund method' },
    { name: 'gateway_refund_id', type: 'text', constraints: '', description: 'Gateway refund ID' },
    { name: 'status', type: 'text', constraints: 'DEFAULT pending, CHECK (pending, processing, completed, failed)', description: 'Refund status' },
    { name: 'processed_by', type: 'uuid', constraints: 'REFERENCES auth.users(id)', description: 'Processed by user' },
    { name: 'processed_at', type: 'timestamptz', constraints: '', description: 'Processing timestamp' },
    { name: 'notes', type: 'text', constraints: '', description: 'Refund notes' },
    { name: 'created_at', type: 'timestamptz', constraints: 'DEFAULT now()', description: 'Creation timestamp' },
  ],

  wallet_transactions: [
    { name: 'id', type: 'uuid', constraints: 'PRIMARY KEY', description: 'Transaction identifier' },
    { name: 'customer_id', type: 'uuid', constraints: 'NOT NULL, REFERENCES customers(id)', description: 'Customer reference' },
    { name: 'transaction_type', type: 'text', constraints: 'NOT NULL, CHECK (credit, debit, refund, bonus)', description: 'Transaction type' },
    { name: 'amount', type: 'numeric(10,2)', constraints: 'NOT NULL', description: 'Transaction amount' },
    { name: 'balance_after', type: 'numeric(10,2)', constraints: 'NOT NULL', description: 'Balance after transaction' },
    { name: 'booking_id', type: 'uuid', constraints: 'REFERENCES bookings(id)', description: 'Related booking' },
    { name: 'payment_id', type: 'uuid', constraints: 'REFERENCES payments(id)', description: 'Related payment' },
    { name: 'description', type: 'text', constraints: '', description: 'Transaction description' },
    { name: 'reference_id', type: 'text', constraints: '', description: 'Reference identifier' },
    { name: 'created_at', type: 'timestamptz', constraints: 'DEFAULT now()', description: 'Transaction timestamp' },
  ],

  commission_records: [
    { name: 'id', type: 'uuid', constraints: 'PRIMARY KEY', description: 'Commission record identifier' },
    { name: 'booking_id', type: 'uuid', constraints: 'NOT NULL, REFERENCES bookings(id)', description: 'Booking reference' },
    { name: 'vendor_id', type: 'uuid', constraints: 'NOT NULL, REFERENCES vendors(id)', description: 'Vendor reference' },
    { name: 'therapist_id', type: 'uuid', constraints: 'REFERENCES therapists(id)', description: 'Therapist reference' },
    { name: 'booking_amount', type: 'numeric(10,2)', constraints: 'NOT NULL', description: 'Booking amount' },
    { name: 'commission_rate', type: 'numeric(5,2)', constraints: 'NOT NULL', description: 'Commission rate %' },
    { name: 'commission_amount', type: 'numeric(10,2)', constraints: 'NOT NULL', description: 'Commission amount' },
    { name: 'therapist_earning', type: 'numeric(10,2)', constraints: 'DEFAULT 0', description: 'Therapist earning' },
    { name: 'platform_earning', type: 'numeric(10,2)', constraints: 'NOT NULL', description: 'Platform earning' },
    { name: 'tds_amount', type: 'numeric(10,2)', constraints: 'DEFAULT 0', description: 'TDS amount' },
    { name: 'gst_amount', type: 'numeric(10,2)', constraints: 'DEFAULT 0', description: 'GST amount' },
    { name: 'settlement_status', type: 'text', constraints: 'DEFAULT pending, CHECK (pending, processing, settled, hold)', description: 'Settlement status' },
    { name: 'settlement_date', type: 'timestamptz', constraints: '', description: 'Settlement date' },
    { name: 'period_month', type: 'date', constraints: '', description: 'Settlement period month' },
    { name: 'created_at', type: 'timestamptz', constraints: 'DEFAULT now()', description: 'Creation timestamp' },
  ],

  // ============================================================================
  // SUPPORT (2 tables)
  // ============================================================================

  support_tickets: [
    { name: 'id', type: 'uuid', constraints: 'PRIMARY KEY', description: 'Ticket identifier' },
    { name: 'ticket_number', type: 'text', constraints: 'UNIQUE, NOT NULL', description: 'Ticket number' },
    { name: 'customer_id', type: 'uuid', constraints: 'REFERENCES customers(id)', description: 'Customer reference' },
    { name: 'user_id', type: 'uuid', constraints: 'REFERENCES auth.users(id)', description: 'User reference' },
    { name: 'booking_id', type: 'uuid', constraints: 'REFERENCES bookings(id)', description: 'Related booking' },
    { name: 'category', type: 'text', constraints: 'NOT NULL, CHECK (enum)', description: 'Ticket category' },
    { name: 'priority', type: 'text', constraints: 'DEFAULT medium, CHECK (low, medium, high, urgent)', description: 'Ticket priority' },
    { name: 'subject', type: 'text', constraints: 'NOT NULL', description: 'Ticket subject' },
    { name: 'description', type: 'text', constraints: 'NOT NULL', description: 'Issue description' },
    { name: 'status', type: 'text', constraints: 'DEFAULT open, CHECK (enum)', description: 'Ticket status' },
    { name: 'assigned_to', type: 'uuid', constraints: 'REFERENCES auth.users(id)', description: 'Assigned agent' },
    { name: 'assigned_at', type: 'timestamptz', constraints: '', description: 'Assignment timestamp' },
    { name: 'resolved_at', type: 'timestamptz', constraints: '', description: 'Resolution timestamp' },
    { name: 'closed_at', type: 'timestamptz', constraints: '', description: 'Closure timestamp' },
    { name: 'resolution_notes', type: 'text', constraints: '', description: 'Resolution notes' },
    { name: 'satisfaction_rating', type: 'integer', constraints: 'CHECK (1-5)', description: 'Satisfaction rating' },
    { name: 'attachments', type: 'text[]', constraints: '', description: 'File attachments' },
    { name: 'created_at', type: 'timestamptz', constraints: 'DEFAULT now()', description: 'Creation timestamp' },
    { name: 'updated_at', type: 'timestamptz', constraints: 'DEFAULT now()', description: 'Update timestamp' },
  ],

  ticket_messages: [
    { name: 'id', type: 'uuid', constraints: 'PRIMARY KEY', description: 'Message identifier' },
    { name: 'ticket_id', type: 'uuid', constraints: 'NOT NULL, REFERENCES support_tickets(id)', description: 'Ticket reference' },
    { name: 'sender_id', type: 'uuid', constraints: 'NOT NULL, REFERENCES auth.users(id)', description: 'Message sender' },
    { name: 'sender_type', type: 'text', constraints: 'NOT NULL, CHECK (customer, employee, system, bot)', description: 'Sender type' },
    { name: 'message', type: 'text', constraints: 'NOT NULL', description: 'Message text' },
    { name: 'attachments', type: 'text[]', constraints: '', description: 'Message attachments' },
    { name: 'is_internal', type: 'boolean', constraints: 'DEFAULT false', description: 'Internal message flag' },
    { name: 'created_at', type: 'timestamptz', constraints: 'DEFAULT now()', description: 'Message timestamp' },
  ],
};
